# -*- coding: utf-8 -*-
"""
@Time ： 2020/3/22 9:01
"""
# ### 列表相关操作
# (1)列表的拼接   (同元组) +
lst1 = [1,2,3]
lst2 = [4,5,6,1]
lst = lst1 + lst2
print(lst)

# (2)列表的重复   (同元组) *
lst = [2,3]
res = lst * 3
print(res)

# (3)列表的切片   (同元组)
# 语法 => 列表[::]  完整格式：[开始索引:结束索引:间隔值]
	# (1)[开始索引:]  从开始索引截取到列表的最后
	# (2)[:结束索引]  从开头截取到结束索引之前(结束索引-1)
	# (3)[开始索引:结束索引]  从开始索引截取到结束索引之前(结束索引-1)
	# (4)[开始索引:结束索引:间隔值]  从开始索引截取到结束索引之前按照指定的间隔截取列表元素值
	# (5)[:]或[::]  截取所有列表


lst = ["王11","李22","文33","陈4","温55","刘66","等两会","刘77"]
# (1)[开始索引:]  从开始索引截取到列表的最后
res = lst[3:]
print(res)

# (2)[:结束索引]  从开头截取到结束索引之前(结束索引-1)
res = lst[:]
print(res)

# (3)[开始索引:结束索引]  从开始索引截取到结束索引之前(结束索引-1)
res = lst[3:7]
print(res)

# (4)[开始索引:结束索引:间隔值]  从开始索引截取到结束索引之前按照指定的间隔截取列表元素值
res = lst[1:7:2]
print(res)

res = lst[7:0:-2]
print(res)

# (5)[:]或[::]  截取所有列表

res = lst[:]
res = lst[::]
print(res)

# (4)列表的获取   (同元组)
#       0        1      2        3       4  正向索引
lst = ["宋江", "吴用", "卢33", "林冲", "杜十娘"]
#       -5       -4    -3      -2       -1  逆向索引
res = lst[4]
res = lst[-1]
print(res)

# (5)列表的修改   ( 可切片 )
lst[0] = "李11"
print(lst)

#1.利用切片进行数据的修改
'''可迭代数据:容器类型数据，range对象，迭代器'''
# 先把1:4所对应的截取数据去除,然后在把可迭代数据中的元素,依次的拿出来进行对应位置赋值
"""无要求:截取的数据个数和实际放入的数据个数没有要求"""
lst[1:4] = ["石阡","鲁智深","武松","武大郎"]
print(lst)

# 2.利用切片+步长的方式进行数据的修改
"""有要求:切几个数据,就放上几个数据,元素个数要匹配"""
print(lst[::2])
# 0 2 4
lst[::2] = (1,2,3)
print(lst)

# (6)列表的删除   ( 可切片 ) del关键字删除
lst = ["宋江","吴用","卢俊义","林冲","杜十娘"]
del lst[0]
print(lst)

# 可以利用切片来删除
lst = ["宋江","吴用","卢俊义","林冲","杜十娘"]
del lst[1:3]
print(lst)

# 把要删除的数据直接写在del 关键字的后面,如果删除res的话,是删除res这个变量,跟列表没有关系.
res = lst[1:3]
del res
print(lst)

# 元组相关操作
"""
元组针对于第一级所有的元素是修改不了的
但是如果含有二级容器,并且该容器可以修改,那么元组里面的二级或者多级可以修改
"""
tuplevar = (1,4,4,5,6,[434,645,43,(234,)])
res = tuplevar[-1]
print(res)
res[-2] = 88
print(tuplevar) #(1, 4, 4, 5, 6, [434, 645, 88, (234,)])

# 集合的值或者字典的键必须是可哈希数据=>不可变得数据类型(int bool float complex str tuple)
# setvar = {(1,2,3,4,5,6,[7,8,9])} # error unhashable type: 'list'
